 Section-5:The Linux Boot process and system logging
->Linux Boot Process
->BIOS:
 *basic Input/Output System
 *Special firmware
 *Its operating system independent and its purpose is to test the underlying hardware components(CPU,MEMORY) and load the boot load or OS
   -this is not unique to the Linux OS
 *Primary purpose is to find and execute the boot loader
 *Performs the POST
  Power-on Self Test
 *Know about bootable devices
  -Hard drives
  -USB drivers
  -DVD drivers
  -etc
 *The boot device search order can be changed
->Boot Loader:
 *LILO :Linux Loader
 *GRUB :Grand unified Bootloader
        Replaced LILO
 *Boot loader start the operating system
 *Boot loader can start the operating system
  with different options
->Initial RAM DISK:
 *initrd
  -initial RAM disk
 *Temporary filesystem that is loaded from disk and stored in memory.
 *Contains helpers and modules required to load the permanent OS file system.(for ex: drivers)
->The /boot Directory
  /boot
 *Contains the files required to boot Linux
 *initrd
 *kernel  (if its compressed its name ends in "z")
 *boot loader configuration
*E.G: $ ls -F /boot
      abi-3.13.0-46-generic         initrd.img-3.13.0-46-generic(initial ram disk)
      config-3.13.0-46-generic      System.map-3.13.0-46-generic
      grub/                         vmlinux-3.13.0-46-generic  (kernel)
->Kernel Ring Buffer
 *Contains messages from the Linux kernel
 *It is a data structure that always stays the same size, once the buffer is completely full, old messages are discarded when new messages arrive.
 *dmesg            (command)
 */var/log/dmesg   (path)
->Runlevels /Description
  0          shuts down the system
  1,S,s      single user mode. Used for maintenance
  2          Multi-user mode with graphical interface. (Debian/Ubuntu)
  3          Multi-user text mode (RedHat/CentOS)
  4          Undefined
  5          Multi-user mode with graphical interface.(RedHat/CentOS)
  6          Reboot
-> Init
 *Traditionally this runlevels are are controlled by init 
 *Init information is stroed in :
  /etc/inittab:            (need to edit default runlevel in this file)
  id:3:initdefault:
 *Being phased out by system
->Systemd: Alternatives of Init
 *Uses target instead of runlevels
 #cd
 /lib/systemd/system
 # ls -l runlevel5.target
 lrwxrwxrwx. 1 root root 16 Jul 17 2014
 runlevel5.target -> graphical.target
 # systemctl set-default graphical.target (command to set graphical target)
->Changing runlevels or targets:
 *telinit RUNLEVEL
  -TELINIT 5
 *systemctl isolate TARGET
  -systemctl isolate graphical.target
->Rebooting:
 # telinit 6
 # systemctl isolate reboot.target
 # reboot
 * shutdown [options] time [message]
 # shutdown -r 15:30 "rebooting"         (Hour:Minute)
 # shutdown -r +5 "rebooting soon!"      (+Minutes)
 # shutdown -r now
-> Poweroff
 # telinit 0
 # systemctl isolate poweroff.target
 # poweroff
->Press f2 several times to enter in bios
 *there go to bootable devices and choose your device by clicking +, its position will be changed.
 *then just exit
 *Now bios execute the bootale loader that it can find
 *Then you will enter Grub menu: showing your multiple operating sytem that you have installed.
 E.G: CentOS linux7 (core) with Linux 3.10.0-229.e17 .x86_64
      CentOS linux7 (core) with Linux 0-resource-b7b86b5851374ae99a0270002bc9
 
  *Press "e" key to edit it
  *the line which starts with Linux or tells the bootloader kernel to use
  *Any thing that is passed after the kernel is argument, likewise you can write "S" for single mode.
  *Press enter to exit and start bootup
  *Or if you add or remove any argument, press ctrl+x bootup new config
  *dmesg -T | less       (on cmd line to get kernel bootup messgages on time basis and in page format)
  *systemctl get-default (to check default target)
  *systemctl set-default graphical.target (this command sets and assembles)
  *systemctl isolate graphical.target (the change target ron and run graphical interface)
  *ron : Run on Network
______________________________________ ________________________________
->The Syslog standard
 *Aids in the processing of messages
 *Allows logging to be centrally controlled
 *Uses facilities and severities to categorize messages
->Number        Keyboard           Description
   0             kern               kernel messages
   1             user               user-level messages
   2             mail               mail system
   3             daemon             system daemons
   4             auth               security/authorization message 
   5             syslog             messages generated by syslogd
   6              lpr               line printer subsystem  
   7              news              network news system
   8             uucp               UUCP subsytem
   9             clock              daemon
   10            authpriv           security/authorization messages
   11             ftp               FTP daemon 
   12             -                 ntp subsystem
   13             -                 log audt
   14             -                 log alert
   15             cron              clock daemon
   16             local0            local use 0 (local0)
   16             local1            local use 0 (loacl1)
   16             local2            local use 0 (local3)
   16             local3            local use 0 (local3)
   ...
   23             local  use 7          (local7)
->Code  Severity         Keyword         Description
   0    Emergency        emerg(panic)    System is unusable
   1    Alert            alert           Action must be taken immediately
   2    critical         crit            critical conditions
   3    Error            err(error)      Error conditions
   4    Warning          warning(warn)   Warning condition
   5    Notice           notice          Normal but significant condition
   6    Info             info            Informational messages
   7    Debug            debug           Debug-level messages
->Syslog Servers:
 *Process syslog messages based on rules
 *syslogd
 *rsyslog
 *syslog-ng
->rsyslog: the main config file for rsyslog is
  /etc/rsyslog.conf:
 $IncludeConfig /etc/rsyslog.d/*.conf (to add additional config)
->Logging rules:
 *Selector field
  . FACILITY.SEVERITY
  . mail.*
  . mail
  . FACILITY.none
  . FACILITY_1.SEVERITY;FACILITY_2.SEVERITY
 *Action field
  . Determines how a message is processed
 *E.g: mail.*        /var/log/mail.log
->Caching vs Non-caching:
 *caching is used if the path starts with a hyphen
  . mail.info        -/var/log/mail.info
 *you may lose some messages during a system crash if you are using caching mode.
 *using cahing mode can improve i/o performance 
 *Example logging rules;
  mail.info    -/var/log/mail.info
  mail.warn    -/var/log mail.warn
  mail.error    /var/log/mail.error
 *Example:(from ubuntu)
  auth,authpriv.*              /var/log/auth.log
  *.*;auth.none,authpriv.none  -/var/log/syslog
 *Example:(from RHL)
  *.info;mail.none;authpriv.none;cron.none  /var/log/messages
______________________________ __________________________________
->Logger: can be used to generate syslog messages
  logger [options] messages     (default = user.notice)
  options:
        -p FACILITY.SEVERITY
        -t TAG
 E.G:$ logger -p mail.info -t mailtest "Test."
     $ sudo tail -1 /var/log/mail.log
     Apr 4 14:33:16 linuxsvr mailtest: Test.
->Logrotate:
 *you can use logrotate tool to rotate, compress, and even mail log files
 *This provides an automate way to manage log files and can help filling up your storage space with log messages.
 *The config file for logrotate is at /etc/logrotate.conf:
  include /etc/logrotate.d   (include directive to read conf files at logrotate.d directory)
 *Exampleof Logrotate.conf file
  weekly          (rotate weekly)
  rotate 4        (keeps 4 weeks of log)
  create          (new empty log file is created)
  compressed      
  include /etc/logrotate.d
->Test the logrotate configuration:
 # logrotate -fv /etc/logrotate.conf     (f-force rotation ,v-verbose)

